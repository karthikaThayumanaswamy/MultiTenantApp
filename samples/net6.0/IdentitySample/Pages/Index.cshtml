@page
@using Finbuckle.MultiTenant
@using Finbuckle.MultiTenant.Abstractions
@using Finbuckle.MultiTenant.AspNetCore.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<style>
    body {
        overflow: hidden;
        font-family: Arial;
    }

     .outer {
        box-shadow: 2px 2px 2px 2px grey;
        width: 400px; 
        @* border: 1px solid #000; *@
        background-color: #00338E; /* Background color */
        color: white; /* Text color */
    }

    .inner {
        @* background-color: #FFFF00; *@
        @* border: 5px solid #000; *@
        margin: 25px;
        padding: 25px;
        color: white; /* Text color */
    }
</style>

@* <h1 class="display-4">Welcome</h1>

<p>
    This project demonstrates using Finbuckle.MultiTenant with ASP.NET Core Identity. See the
    <a href="https://www.finbuckle.com/MultiTenant/Docs/Identity">documentation</a> for more details.
</p> *@

@if (Model.AppTenantInfo is null)
{
    <h2>There is no tenant selected. Use the menu bar to select a tenant.</h2>

    <p>
        You can register, login, logout, and manage account via the default Identity UI within each tenant. Note that
        even with a shared database a user can register with each tenant and will maintain separate login sessions.
        Finbuckle.MultiTenant makes it appear like separate databases to Identity.
    </p>
    <p>
        A few things to note from this sample:
        <ul>
            <li>
                The ACME and MegaCorp tenants share a common SQLite database.
            </li>
            <li>
                Initech has its own separate datasebase.
            </li>
            <li>
                If needed, the two databases will be created when the application runs.
            </li>
            <li>
                A custom <a href="https://docs.microsoft.com/en-us/ef/core/cli/dbcontext-creation?tabs=dotnet-core-cli#from-a-design-time-factory">design time factory</a>
                is used for <code>dotnet ef</code> commands. It uses a dummy tenant.
            </li>
            <li>
                The sample uses the <a href="https://www.finbuckle.com/MultiTenant/Docs/Strategies#base-path-strategy">BasePathStrategy</a>
                with the <code>RebaseAspNetCorePathBase</code> option enabled. Consequently all static resource urls in
                the layout pages (including for ASP.NET Core Identity) have been modified to absolute urls.
            </li>
        </ul>
    </p>
}
else
{
   <div style="display: flex; align-items: center;">
     <img src="@($"/images/{@Model.AppTenantInfo.Identifier}/{@Model.AppTenantInfo.Logo}")" style="margin-right: 10px; width: 120px;">
     <h2>@Model.AppTenantInfo.Name</h2>
    </div>

    <div class="d-flex justify-content-center align-items-center" style="height: 80vh;">

        <div class="outer">
            <div class="inner">
                @if (SignInManager.IsSignedIn(User))
                {
                    <p style="font-style: oblique;">Hello @User.Identity?.Name!!!!!</p>
                    <p style="font-style: oblique;">you are in @Model.AppTenantInfo.Name Tenant</p>
                }
                else
                {
                    <p style="font-style: oblique;">Hello!!! you are in @Model.AppTenantInfo.Name Tenant and its using @Model.AppTenantInfo.ConnectionString</p>
                    <p>Please Login to Proceed further</p>
                        <li class="nav-item">
                            <a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Login" style="color: white;">Login</a>
                        </li>
                }
                @* <a class="btn btn-primary mb-1" href="/Identity/Account/Login" style="width: 100px; height: 40px; padding: 5px;">Login</a> *@
            </div>
        </div>  
    </div>
}